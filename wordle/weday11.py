# -*- coding: utf-8 -*-
"""WeDay11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YAOhV-WuWfYqTjUtm7Oc2WJZw2DxSlsp
"""

import random

def computer_knows_we_guess(a: str):
    def filter_words(level: str) -> list:
        n = difficulty_level(a)
        with open("sowpods.txt") as file:
            words = file.read().split()
        valid_words = [word for word in words if len(word) == n and has_no_repeated_letters(word)]
        return valid_words

    def difficulty_level(difficulty_level: str):
        if difficulty_level == "E":
            n = 4
        elif difficulty_level == "M":
            n = 5
        elif difficulty_level == "H":
            n = 6
        else:
            n = 0
        return n

    def has_no_repeated_letters(word):
        return len(set(word)) == len(word)

    valid_words = filter_words(a)
    given_word = random.choice(valid_words)

    def word_compare(given_word: str):
        guessed_word = input("Enter the guessed word: ")
        common_letters = set(guessed_word) & set(given_word)
        output = str(len(common_letters))

        if guessed_word == given_word:
            return "WIN"
        elif output == str:
            return "anagrams"
        else:
            print(output)
            return word_compare(given_word)

    result = word_compare(given_word)
    print(result)

computer_knows_we_guess("E")

"""We know computer guess...

"""

import random

def filter_words(level: str) -> list:
    n = difficulty_level(level)
    with open("sowpods.txt") as file:
        words = file.read().split()
    valid_words = [word for word in words if len(word) == n and has_no_repeated_letters(word)]
    return valid_words

def difficulty_level(difficulty: str) -> int:
    if difficulty == "E":
        return 4
    elif difficulty == "M":
        return 5
    elif difficulty == "H":
        return 6
    else:
        raise ValueError("Invalid difficulty level. Use 'E', 'M', or 'H'.")

def has_no_repeated_letters(word: str) -> bool:
    return len(set(word)) == len(word)

def get_common_letters(target_word: str, guessed_word: str) -> int:
    return sum(1 for t, g in zip(target_word, guessed_word) if t == g)

def computer_guess_word(target_word: str, valid_words: list) -> str:
    return random.choice(valid_words)

def play_game():
    difficulty = input("Enter difficulty level (E for Easy, M for Medium, H for Hard): ").upper()
    valid_words = filter_words(difficulty)

    if not valid_words:
        print("No valid words found for the given difficulty level.")
        return

    target_word = random.choice(valid_words)
    print(f"\nComputer's guess: {target_word}")

    while True:
        common_letters = int(input("Enter the number of common letters with the target word: "))

        if common_letters == len(target_word):
            print("Computer guessed the correct word! You win!")
            break

        valid_words = [word for word in valid_words if get_common_letters(target_word, word) == common_letters]

        if not valid_words:
            print("There are no more valid words. You might have made a mistake.")
            break

        target_word = computer_guess_word(target_word, valid_words)
        print(f"\nComputer's next guess: {target_word}")

if __name__ == "__main__":
    play_game()

